// Generated by jextract

package org.sherman;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$40 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$40() {}
    static final FunctionDescriptor gettid$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle gettid$MH = RuntimeHelper.downcallHandle(
        "gettid",
        constants$40.gettid$FUNC
    );
    static final FunctionDescriptor sigaltstack$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle sigaltstack$MH = RuntimeHelper.downcallHandle(
        "sigaltstack",
        constants$40.sigaltstack$FUNC
    );
    static final FunctionDescriptor sigstack$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle sigstack$MH = RuntimeHelper.downcallHandle(
        "sigstack",
        constants$40.sigstack$FUNC
    );
    static final FunctionDescriptor sighold$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sighold$MH = RuntimeHelper.downcallHandle(
        "sighold",
        constants$40.sighold$FUNC
    );
    static final FunctionDescriptor sigrelse$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sigrelse$MH = RuntimeHelper.downcallHandle(
        "sigrelse",
        constants$40.sigrelse$FUNC
    );
    static final FunctionDescriptor sigignore$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sigignore$MH = RuntimeHelper.downcallHandle(
        "sigignore",
        constants$40.sigignore$FUNC
    );
}


