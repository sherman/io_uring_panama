// Generated by jextract

package org.sherman.liburing;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$37 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$37() {}
    static final FunctionDescriptor sync$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle sync$MH = RuntimeHelper.downcallHandle(
        "sync",
        constants$37.sync$FUNC
    );
    static final FunctionDescriptor getpagesize$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle getpagesize$MH = RuntimeHelper.downcallHandle(
        "getpagesize",
        constants$37.getpagesize$FUNC
    );
    static final FunctionDescriptor getdtablesize$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle getdtablesize$MH = RuntimeHelper.downcallHandle(
        "getdtablesize",
        constants$37.getdtablesize$FUNC
    );
    static final FunctionDescriptor truncate$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle truncate$MH = RuntimeHelper.downcallHandle(
        "truncate",
        constants$37.truncate$FUNC
    );
    static final FunctionDescriptor truncate64$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle truncate64$MH = RuntimeHelper.downcallHandle(
        "truncate64",
        constants$37.truncate64$FUNC
    );
    static final FunctionDescriptor ftruncate$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle ftruncate$MH = RuntimeHelper.downcallHandle(
        "ftruncate",
        constants$37.ftruncate$FUNC
    );
}


