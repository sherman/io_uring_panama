// Generated by jextract

package org.sherman.liburing;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1() {}
    static final FunctionDescriptor socketpair$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle socketpair$MH = RuntimeHelper.downcallHandle(
        "socketpair",
        constants$1.socketpair$FUNC
    );
    static final FunctionDescriptor bind$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_at__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ax25__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_dl__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_eon__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in6__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_inarp__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ipx__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_iso__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ns__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_un__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_x25__")
        ),
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle bind$MH = RuntimeHelper.downcallHandle(
        "bind",
        constants$1.bind$FUNC
    );
    static final FunctionDescriptor getsockname$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_at__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ax25__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_dl__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_eon__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in6__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_inarp__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ipx__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_iso__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ns__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_un__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_x25__")
        ),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle getsockname$MH = RuntimeHelper.downcallHandle(
        "getsockname",
        constants$1.getsockname$FUNC
    );
    static final FunctionDescriptor connect$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_at__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ax25__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_dl__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_eon__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in6__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_inarp__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ipx__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_iso__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ns__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_un__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_x25__")
        ),
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle connect$MH = RuntimeHelper.downcallHandle(
        "connect",
        constants$1.connect$FUNC
    );
    static final FunctionDescriptor getpeername$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_at__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ax25__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_dl__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_eon__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in6__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_inarp__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ipx__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_iso__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ns__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_un__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_x25__")
        ),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle getpeername$MH = RuntimeHelper.downcallHandle(
        "getpeername",
        constants$1.getpeername$FUNC
    );
    static final FunctionDescriptor send$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle send$MH = RuntimeHelper.downcallHandle(
        "send",
        constants$1.send$FUNC
    );
}


